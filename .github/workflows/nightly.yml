name: Nightly Build

on:
  push:
    tags:
      - "v*.*.*-*"
  schedule:
    - cron: "0 0 * * *" # Run every day at 00:00 UTC
  workflow_dispatch:

env:
  DOCKER_CLI_EXPERIMENTAL: enabled
  DOCKER_PLATFORMS: linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm/v5,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/riscv64,linux/s390x
  QEMU_PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x
  DATE_STRING: set by scripts/extract_nightly_tags.sh
  GIT_TAG: set by scripts/extract_nightly_tags.sh
  GORELEASER_CURRENT_TAG: set by scripts/extract_nightly_tags.sh
  MEMOS_VERSION: set by scripts/extract_nightly_tags.sh
  PREVIOUS_TAG: set by scripts/extract_nightly_tags.sh

jobs:
  goreleaser:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      # setup tools
      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@c5ead9a448b4660cf1e7866ee22e4dc56538031a
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.33.1"

      - name: Setup Goreleaser
        uses: jaxxstorm/action-install-gh-release@c5ead9a448b4660cf1e7866ee22e4dc56538031a
        with:
          repo: goreleaser/goreleaser
          cache: enable
          tag: "v1.23.0"

      - name: Setup buf
        uses: bufbuild/buf-setup-action@88db93f5d74ffa329bb43e42aa95cd822697d214
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@0fc45e912669ba9e8fa2b430e97c8da2a632e29b
        with:
          install-only: true

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ">=1.21.5"
          check-latest: true
          cache-dependency-path: memos-upstream/go.sum

      - name: Setup pnpm
        uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: "memos-upstream/web/pnpm-lock.yaml"
      # /setup tools

      - name: Setup Git and Env vars
        shell: bash
        run: task ci:nightly:setup-git

      - name: Cache front-end build
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2
        with:
          path: |
            build/frontend
            .task/checksum/build-frontend
          key: |
            nightly-frontend-${{ env.GIT_TAG }}-${{ env.DATE_STRING }}
          restore-keys: |
            nightly-frontend-${{ env.GIT_TAG }}-

      - name: Cache back-end build
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2
        with:
          path: |
            build/backend
            ./task/checksum/build-nightly-all
          key: |
            nightly-backend-${{ env.GIT_TAG }}-${{ env.DATE_STRING }}
          restore-keys: |
            nightly-backend-${{ env.GIT_TAG }}-

      - name: Pull latest changes to Memos subtree  
        run: |
          git commit -am "chore:ci: ensure clean git state" || true
          task git:subtree:pull-latest

      - name: Nightly build
        run: task build:nightly:all

      - name: Create pre-release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            build/backend/*.tar.gz
            build/backend/*.zip
            build/backend/*.txt

          body: |
            This is an **untested** pre-release, built with bleeding-edge upstream Memos code.
            Do *not* use in production.

            *Make sure to run this with a database other than the one you use with stable releases.*

            Version identifier `${{ env.GIT_TAG }}` is auto-generated, based on what is set at Memos upstream on `version.go` file. Therefore, pre-release versioning are subject to change without notice.

            Release assets may be overwritten by the daily automated builds if the upstream Memos version is still the same.

            **[Official Memos upstream changelog](https://github.com/usememos/memos/compare/${{ env.MEMOS_VERSION }}...main)**
          tag_name: ${{ env.GIT_TAG }}
          draft: false
          prerelease: true

      ### Docker ###
      - name: Rename builds to Docker format
        run: |
          task pre-docker:rename-builds

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: ${{ env.QEMU_PLATFORMS }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
        with:
          version: latest
          platforms: ${{ env.DOCKER_PLATFORMS }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: lincolnthalles
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log-in to GitHub's Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c
        with:
          images: |
            lincolnthalles/memos
            ghcr.io/lincolnthalles/memos-builds
          tags: |
            type=raw,value=nightly

      - name: Build and Push Docker images
        id: docker_build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: ./
          file: ./docker/Dockerfile
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      ### /Docker ###
