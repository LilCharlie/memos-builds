name: Nightly Build

on:
  push:
    tags:
      - "v*.*.*-*"
  schedule:
    - cron: "0 0 * * *" # Run every day at 00:00 UTC
  workflow_dispatch:

env:
  DOCKER_PLATFORMS: |
    linux/386
    linux/amd64
    linux/amd64/v2
    linux/amd64/v3
    linux/arm/v5
    linux/arm/v6
    linux/arm/v7
    linux/arm64
    linux/ppc64le
    linux/riscv64
    linux/s390x
  QEMU_PLATFORMS: |
    linux/386
    linux/amd64
    linux/arm/v6
    linux/arm/v7
    linux/arm64
    linux/ppc64le
    linux/riscv64
    linux/s390x
  # Variables set by scripts/ci.py
  GORELEASER_PREVIOUS_TAG: "[not set]"
  GORELEASER_CURRENT_TAG: "[not set]"
  BUILD_VERSION: "[not set]"
  CACHE_KEY: "[not set]"
  MEMOS_VERSION: "[not set]"

jobs:
  front-end:
    name: Build front-end
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      # setup deps
      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@71d17cb091aa850acb2a1a4cf87258d183eb941b
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.34.1"

      - name: Setup pnpm
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: "memos/web/pnpm-lock.yaml"
      # /setup deps

      - name: Pull latest changes from usememos/memos:main to subtree
        run: python scripts/ci.py pull-subtree --branch=main
      - name: Setup environment variables
        run: python scripts/ci.py setup-env --nightly

      - name: Cache front-end build
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319
        with:
          path: |
            build/frontend
            .task/checksum/build-frontend
          key: |
            frontend-${{env.BUILD_VERSION}}-${{ env.CACHE_KEY }}
          restore-keys: |
            frontend-${{env.BUILD_VERSION}}-

      - name: Build front-end
        run: task build:frontend

      - name: Upload front-end artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
          name: frontend_${{env.BUILD_VERSION}}
          compression-level: 9
          if-no-files-found: error
          path: |
            build/frontend/
            .task/checksum/build-frontend

  goreleaser:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      actions: read # required by wait action
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      # setup deps
      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@71d17cb091aa850acb2a1a4cf87258d183eb941b
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.34.1"

      - name: Setup buf
        uses: bufbuild/buf-setup-action@517ee23296d5caf38df31c21945e6a54bbc8a89f
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: 1.29.0

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@0fc45e912669ba9e8fa2b430e97c8da2a632e29b
        with:
          install-only: true

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ">=1.22"
          check-latest: true
          cache-dependency-path: memos/go.sum

      - name: Setup Goreleaser
        uses: jaxxstorm/action-install-gh-release@71d17cb091aa850acb2a1a4cf87258d183eb941b
        with:
          repo: goreleaser/goreleaser
          cache: enable
          tag: "v1.24.0"
      # /setup deps

      - name: Pull latest changes from usememos/memos:main to subtree
        run: python scripts/ci.py pull-subtree --branch=main
      - name: Setup environment variables
        run: python scripts/ci.py setup-env --nightly

      ### Front-end ###
      - name: Wait for the front-end build to finish
        uses: yogeshlonkar/wait-for-jobs@e63eb7009ce730db926a5c4eeb9ba2bb5b2acb59
        with:
          jobs: "Build front-end"
          interval: "2000"
          ttl: "10"

      - name: Download front-end artifact
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427
        with:
          name: frontend_${{env.BUILD_VERSION}}
      ### /Front-end ###

      - name: Cache back-end build
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319
        with:
          path: |
            build/backend
            ./task/checksum/build-backend-nightly
          key: |
            nightly-backend-${{ env.BUILD_VERSION }}-${{ env.CACHE_KEY }}
          restore-keys: |
            nightly-backend-${{ env.BUILD_VERSION }}-

      - name: Nightly build
        run: task build:backend-nightly

      - name: Create pre-release
        uses: softprops/action-gh-release@d99959edae48b5ffffd7b00da66dcdb0a33a52ee
        with:
          files: |
            build/backend/*.tar.gz
            build/backend/*.zip
            build/backend/*.txt
          body: |
            This is an **untested** pre-release, built with bleeding-edge upstream Memos code.
            It is strongly recommended that you do *not* use it in production.

            *Ensure that you use a different database than the one you use for stable releases.*

            Version identifier `${{ env.BUILD_VERSION }}` is auto-generated, based on what is set at Memos upstream on `version.go` file. Therefore, pre-release versioning is subject to change without notice.

            Release assets may be overwritten by the daily automated builds if the upstream Memos version hasn't changed.

            **[Official Memos upstream changelog](https://github.com/usememos/memos/compare/${{ env.MEMOS_VERSION }}...main)**
          tag_name: ${{ env.BUILD_VERSION }}
          draft: false
          prerelease: true

      ### Docker ###
      - name: Rename goreleaser builds to the format expected by current Dockerfile
        run: python scripts/ci.py rename-to-docker

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: ${{ env.QEMU_PLATFORMS }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20
        with:
          version: latest
          install: true
          platforms: ${{ env.DOCKER_PLATFORMS }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: lincolnthalles
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log-in to GitHub's Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: |
            lincolnthalles/memos
            ghcr.io/lincolnthalles/memos-builds
          tags: |
            type=raw,value=nightly

      - name: Build and Push Docker images
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e
        with:
          context: ./
          file: ./docker/Dockerfile
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      ### /Docker ###
