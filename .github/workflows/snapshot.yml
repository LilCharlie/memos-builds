name: Build snapshot and pre-release

on:
  workflow_dispatch:

env:
  TAG: ${{ github.event.inputs.tag }}
  PREVIOUS_TAG: ${{ github.event.inputs.previous_tag }}

jobs:
  goreleaser:
    name: Snapshot
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Setup git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      # Setup tooling
      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.33.1"

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@v3.0.0
        with:
          install-only: true

      - name: Setup Goreleaser
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: goreleaser/goreleaser
          cache: enable
          tag: "v1.23.0"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.21.5"
          check-latest: true
          cache-dependency-path: memos-upstream/go.sum

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: "memos-upstream/web/pnpm-lock.yaml"
      # /Setup tooling

      - name: Pull latest commit from Memos subtree
        run: |
          task git:subtree:pull-latest

      - name: Get previous tag
        shell: bash
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0)
          echo PREVIOUS_TAG=$PREVIOUS_TAG >> $GITHUB_ENV
          echo GORELEASER_PREVIOUS_TAG=$PREVIOUS_TAG >> $GITHUB_ENV
          echo "Previous tag is $PREVIOUS_TAG"

          if [[ $PREVIOUS_TAG == *"-dev" ]]; then
            VERSION=$(echo $PREVIOUS_TAG | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)"-dev"
            echo TAG=$VERSION >> $GITHUB_ENV
            echo GORELEASER_CURRENT_TAG=$VERSION >> $GITHUB_ENV
            echo "Previous tag is a dev release. Current tag set to $VERSION"
            exit 0
          fi

          FILE_VERSION="v"$(sed -En 's/^var[[:space:]]+Version[[:space:]]+=[[:space:]]+"([[:digit:].]+)"$/\1/p' memos-upstream/server/version/version.go)

          if [ -n "$FILE_VERSION" ]; then
            VERSION=$FILE_VERSION
          elif [ -n "$PREVIOUS_TAG" ]; then
            VERSION=$PREVIOUS_TAG
          else
            VERSION="v"$(date +%Y.%m.%d)".0"
          fi

          VERSION=$(echo $VERSION | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)"-dev"
          echo TAG=$VERSION >> $GITHUB_ENV
          echo GORELEASER_CURRENT_TAG=$VERSION >> $GITHUB_ENV
          echo "Current tag set to $VERSION"

      - name: Build snapshot for all configured targets
        run: |
          task build:snapshot:all

      - name: Create pre-release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/*.tar.gz
            build/*.zip
            build/*.txt

          body: |
            This is an *untested* pre-release, built with bleeding-edge upstream Memos code.
            Do *not* use in production.

            Version identifier `${{ env.TAG }}` is auto-generated, based on the previous tag of this repository and the version set in the upstream Memos codebase at the time of the build. As such, pre-release versions are subject to change without notice.

            **[Official Memos upstream changelog](https://github.com/usememos/memos/compare/${{ env.PREVIOUS_TAG }}...main)**
          tag_name: ${{ env.TAG }}
          draft: true
          prerelease: true
