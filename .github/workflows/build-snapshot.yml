name: Build snapshot with GoReleaser

on:

  workflow_dispatch:

jobs:
  goreleaser:
    name: GoReleaser snapshot
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - run: |
          git fetch --force --tags

      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.32.0"

      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1.28.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.21.5"
          check-latest: true
          cache-dependency-path: memos-upstream/go.sum

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm
          cache-dependency-path: "memos-upstream/web/pnpm-lock.yaml"

      - name: Pull latest upstream
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git subtree pull --prefix=memos-upstream https://github.com/usememos/memos.git main --squash
          git update-index --assume-unchanged memos-upstream/

      - name: Build frontend
        run: |
          task build:frontend

      - name: Tidy backend dependencies
        run: |
          task build:backend:tidy

      - name: Build snapshot with goreleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: build --snapshot --clean --timeout 60m  --config .goreleaser-pre.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get previous tag
        shell: bash
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0) 
          echo PREVIOUS_TAG=$PREVIOUS_TAG >> $GITHUB_ENV

          FILE_VERSION="v"$(sed -En 's/^var[[:space:]]+Version[[:space:]]+=[[:space:]]+"([[:digit:].]+)"$/\1/p' memos-upstream/server/version/version.go)
          
          if [ -n "$FILE_VERSION" ]; then
            VERSION=$FILE_VERSION
          elif [ -n "$PREVIOUS_TAG" ]; then
            VERSION=$PREVIOUS_TAG
          else
            VERSION=$(date +%Y.%m.%d)".0"
          fi

          VERSION=$(echo $VERSION | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)"-dev"
          echo TAG=$VERSION >> $GITHUB_ENV

      - name: Compress binaries
        run: |
          cd ${{ github.workspace }}/build/memos_darwin_amd64_v1/;
          tar -czvf ${{ github.workspace }}/build/memos-${{ env.TAG }}-darwin-amd64.tar.gz memos

          cd ${{ github.workspace }}/build/memos_darwin_arm64/;
          tar -czvf ${{ github.workspace }}/build/memos-${{ env.TAG }}-darwin-arm64.tar.gz memos

          cd ${{ github.workspace }}/build/memos_linux_amd64_v1/;
          tar -czvf ${{ github.workspace }}/build/memos-${{ env.TAG }}-linux-amd64.tar.gz memos

          cd ${{ github.workspace }}/build/memos_linux_arm64/;
          tar -czvf ${{ github.workspace }}/build/memos-${{ env.TAG }}-linux-arm64.tar.gz memos

          cd ${{ github.workspace }}/build/memos_windows_amd64_v1;
          zip ${{ github.workspace }}/build/memos-${{ env.TAG }}-windows-amd64.zip memos.exe

          cd ${{ github.workspace }}/build/memos_windows_arm64;
          zip ${{ github.workspace }}/build/memos-${{ env.TAG }}-windows-arm64.zip memos.exe

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/memos-${{ env.TAG }}-darwin-amd64.tar.gz
            build/memos-${{ env.TAG }}-darwin-arm64.tar.gz
            build/memos-${{ env.TAG }}-linux-amd64.tar.gz
            build/memos-${{ env.TAG }}-linux-arm64.tar.gz
            build/memos-${{ env.TAG }}-windows-amd64.zip
            build/memos-${{ env.TAG }}-windows-arm64.zip

          body: |
            This is a pre-release, built with bleeding-edge upstream Memos code.
            Do *not* use in production.

            Version identifier `${{ env.TAG }}` is auto-generated and is subject to change when a new upstream release is made.

            **[Official Memos upstream changelog](https://github.com/usememos/memos/compare/${{ env.PREVIOUS_TAG }}...main)**
          tag_name: ${{ env.TAG }}
          draft: true
          prerelease: true
